user  root; #root can unix protocal
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/debug.log debug;
#error_log  logs/error.log  info;

pid        logs/nginx.pid;


events {
    use epoll; #
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    
    #gzip  on;

    server {
        listen       8888;
        server_name  localhost;

        charset utf-8;
        lua_code_cache off;
        #access_log  logs/host.access.log  main;
        location ~ /static/(.*).(jpg|css|js) {
            autoindex on;
            # root /home/isolet/MySite/django/LiveSite/static;
            alias /home/isolet/MySite/django/LiveSite/static/$1.$2;
        }
 
        # location ~ /room {
        #     default_type 'text/html';
        #     alias html/$1.html;
        # }
        location / {
            root   html;
            index  index.html index.htm;
        }
        #############stat################
        location /status {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }
        location /status.xsl{
            root /home/isolet/nginx-rtmp-module-1.2.1/;
        }
        location /control {
            rtmp_control all;
        }
        location /hls{
            types{
                appliction/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            #alias /opt/video/hls;
            expires -1;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            root /usr/local/openresty/nginx/opt/video/;
        }
        #websocket 
        location /websocket {
            lua_socket_log_errors off;
            content_by_lua_file lua/websocket.lua;
        }
        #推流鉴权
        location /checkpermission {
            # default_type 'text/html';
            # content_by_lua_file lua/test.lua;
            content_by_lua_file lua/checkstream.lua;
        }
        ##############end######################

        ##############django#####################

        location  ~/admin {
            include uwsgi_params;
            uwsgi_pass unix:/home/isolet/MySite/django/LiveSite/uwsgi.sock;
            uwsgi_read_timeout 30;
        }
        
        location ~/Live {
            # root   html;
            # index  index.html index.htm;
            include uwsgi_params;
            # uwsgi_pass 127.0.0.1:8000;
            uwsgi_pass unix:/home/isolet/MySite/django/LiveSite/uwsgi.sock;
            uwsgi_read_timeout 30;
        }
        ##############end#####################
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}

rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        application vod{
            play opt/video;
        }
        application liveapp{
            live on;
            
            #record keyframes;
            #record_path /tmp;
            #record_max_size 128K;
            #record_interval 30s;
            #record_suffix this.is.flv;

            #on_public http://localhost:8000/publish;
            #on_play http://localhost:8000/play;
            #on_record_done http://localhost:8000/record_done;
        }

        application hls {
            live on;
            hls on;
            #推流时进行权限验证，使用on_publish转至HTTP上下文
            publish_notify on; #直播事件通知开关
            on_publish http://localhost:8888/checkpermission.html;

            wait_key on;                #切片保护 防止马赛克
            hls_path /usr/local/openresty/nginx/opt/video/hls;
            hls_fragment 100s;        #切片时间
            hls_playlist_length 200s; #可回看时间60s
            hls_continuous on;      #连续模式
            hls_cleanup on;         #清除多余切片
            hls_nested on;          #嵌套模式
        }
    }
}
